name: Selenium TestNG CI (Cross-Browser XML Driven)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
    contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # 3. Set up system environment for better stability
      - name: Setup system environment
        run: |
          # Increase virtual memory
          sudo sysctl -w vm.max_map_count=262144
          # Clean up any existing selenium temp files
          sudo rm -rf /tmp/selenium-* || true
          # Create dedicated temp directory
          mkdir -p /tmp/selenium-tests
          export TMPDIR=/tmp/selenium-tests

      # 4. Install Chrome
      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      # 5. Install Firefox via APT (not Snap)
      - name: Install Firefox (APT)
        run: |
          sudo snap remove firefox || true
          sudo add-apt-repository ppa:mozillateam/ppa -y
          echo '
          Package: *
          Pin: release o=LP-PPA-mozillateam
          Pin-Priority: 1001
          ' | sudo tee /etc/apt/preferences.d/mozilla-firefox
          sudo apt-get update
          sudo apt-get install -y firefox

      # 6. Install Microsoft Edge
      - name: Install Microsoft Edge
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo install -o root -g root -m 644 microsoft.gpg /usr/share/keyrings/
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/edge stable main" | sudo tee /etc/apt/sources.list.d/microsoft-edge.list
          sudo apt-get update
          sudo apt-get install -y microsoft-edge-stable

      # 7. Verify browser versions
      - name: Verify browser versions
        run: |
          google-chrome --version
          firefox --version
          microsoft-edge --version

      # 8. Set up display for headless mode
      - name: Setup virtual display
        run: |
          sudo apt-get install -y xvfb
          export DISPLAY=:99
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &

      # 9. Run TestNG suite (Cross-Browser) with timeout and retries
      - name: Run TestNG suite
        run: |
          export DISPLAY=:99
          timeout 30m mvn clean test -DsuiteXmlFile=testng.xml -Dmaven.test.failure.ignore=true
        continue-on-error: true

      # 10. Cleanup selenium temp files
      - name: Cleanup temp files
        if: always()
        run: |
          sudo rm -rf /tmp/selenium-* || true
          sudo rm -rf /tmp/selenium-tests || true

      # 11. Generate Allure Report
      - name: Generate Allure Report
        if: always()
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: target/allure-results
          allure_report: allure-report
          gh_pages: gh-pages
          allure_history: allure-history

      # 12. Deploy to GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report
          destination_dir: allure-report

      # 13. Upload artifacts as backup
      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: target/allure-results
          if-no-files-found: warn

      # 14. Comment PR with report link
      - name: Comment PR with Allure Report
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ“Š **Allure Report**: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-report/'
            })
            
